--
-- Have cribbed from:
--
-- <http://teh.id.au/posts/2017/02/13/interactive-print/>
-- <https://github.com/commercialhaskell/stack/issues/2204#issue-157250531>
--

--
-- Interactive pretty-printing with hscolour + pretty-show
--
:set -package hscolour
:set -package pretty-show
import Prelude
import qualified System.IO
import qualified Text.Show.Pretty (ppShow)
import Language.Haskell.HsColour
import Language.Haskell.HsColour.Colourise
let colourPrintXXX = System.IO.putStrLn . hscolour TTY defaultColourPrefs False False [] False . Text.Show.Pretty.ppShow
:def pretty \_ -> return (":set -interactive-print colourPrintXXX")
:def no-pretty \_ -> return (":set -interactive-print System.IO.print")
-- Unload modules for colourPrintXXX
:module -Prelude
:module -System.IO
:module -Text.Show.Pretty
:module -Language.Haskell.HsColour
:module -Language.Haskell.HsColour.Colourise
:pretty

--
-- Extensions
--
:set -XOverloadedStrings

--
-- Warnings
--
-- :set -Wall -fwarn-tabs -fno-warn-type-defaults -fno-warn-missing-signatures
:set -Wall -fwarn-tabs
:set -Wno-type-defaults

-- Show the type of evaluated expression.
:set +t

-- Enable multi-line expressions with :{ and :}
:set +m

-- Colourful prompt.
-- :set prompt "\n\ESC[1;34m%s\STX\n\ESC[0;33m\STXλ> \ESC[m\STX"
-- Less busy but colourful prompt.
-- :set prompt "\ESC[0;33m\STXλ> \ESC[m\STX"

-- Full prompt
-- :set prompt      "\001\ESC[01;35m\002%s \001\ESC[01;34m\002> \001\ESC[m\002\STX"
-- :set prompt-cont "\001\ESC[01;35m\002%s \001\ESC[01;31m\002| \001\ESC[m\002\STX"

-- Neat prompt
-- :set prompt      "\001\ESC[33m\002λ \001\ESC[01;34m\002> \001\ESC[m\002\STX"
-- :set prompt-cont "\001\ESC[33m\002λ \001\ESC[01;31m\002| \001\ESC[m\002\STX"

-- :set prompt "\n\ESC[1;35m%s\n\ESC[1;34mλ> \ESC[m\STX"
-- :set prompt "\n\ESC[1;34m%s\n\ESC[0;33mλ> \ESC[m\STX"

-- My full prompt.
:set prompt "\n\ESC[1;34m\STX%s\n\ESC[0;33m\STXλ> \ESC[m\STX"
:set prompt-cont                "\ESC[0;33m\STXλ\ESC[1;31m\STX| \ESC[m\STX"