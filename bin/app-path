#!/bin/bash
#
# Note: Shelly apps should be sourced from your .bash_profile. 
# The shebang above is just for file type detection in vim :).
#
# Usage:
#
#   . ~/bin/auto-path
#

script=app-path

shelly_apps=~/.shelly/apps

# Save the original paths.
export SHELLY_ORIGINAL_PATH=${SHELLY_ORIGINAL_PATH:-$PATH}
export SHELLY_ORIGINAL_LD_LIBRARY_PATH=${SHELLY_ORIGINAL_LD_LIBRARY_PATH:-$LD_LIBRARY_PATH}
export SHELLY_ORIGINAL_DYLD_LIBRARY_PATH=${SHELLY_ORIGINAL_DYLD_LIBRARY_PATH:-$DYLD_LIBRARY_PATH}

# Clobber paths so that we don't keep prepending to them.
PATH=$SHELLY_ORIGINAL_PATH
LD_LIBRARY_PATH=$SHELL_ORIGINAL_LD_LIBRARY_PATH
DYLD_LIBRARY_PATH=$SHELL_ORIGINAL_DYLD_LIBRARY_PATH

ls_soft_link_separator=' -> '

if [ -d "$shelly_apps" ]; then
  for dir in ${shelly_apps}/*; do
    if [ "-d $dir" ]; then
#      if [ -L "$dir" ]; then
#        echo "$script: $dir -> "$(\ls -l "${dir}" | ruby -naF"${ls_soft_link_separator}" -e 'puts $F[1]')
#      else
#        echo $script: $dir
#      fi

      binDir=$dir/bin
      if [ -d "$binDir" ]; then
        export PATH=$binDir:$PATH
      fi

      manDir=$dir/man
      if [ -d "$manDir" ]; then
        export MANPATH=$manDir:$MANPATH
      fi

      libDir=$dir/lib
      if [ -d "$libDir" ]; then
        export LD_LIBRARY_PATH=$libDir:$LD_LIBRARY_PATH
        export DYLD_LIBRARY_PATH=$libDir:$LD_LIBRARY_PATH
      fi

      pkgConfigDir=$dir/lib/pkgconfig
      if [ -d "$pkgConfigDir" ]; then
        export PKG_CONFIG_PATH=$pkgConfigDir:$PKG_CONFIG_PATH
      fi
    fi
  done
fi
