#!/usr/bin/env bash

set -euo pipefail

Usage() {
  echo "usage: $(basename $0) ssh|create|attach|list|status|start|up|stop|down|allow-web|allow-dev-web" >&2
  exit 2
}

if [[ $# -ne 1 ]]; then
  Usage
fi

account='steshaw@gmail.com'
region=us-central1
zone=$region-a

region=australia-southeast1
zone=$region-a

project=tlcsrc-1

name=cannes
name=dev
name=dev-au

disk=dev-au
diskSize=60GB
diskType=pd-ssd
snapshot=dev-au-snapshot-1

machineType=n1-standard-4
machineType=n1-highcpu-8
#machineType=custom-8-12
#machineType=custom-8-8
#machineType=custom-4-8 # 4vCPU 8GB
customCPU=8
customMemory=10GB

imageFamily=ubuntu-1604-lts
imageProject=ubuntu-os-cloud

sourceSnapshot=dev-1
tags='dev,http-server,https-server'

command=$1

# aliases
[[ $command == up ]] && command=start
[[ $command == down ]] && command=stop
[[ $command == dn ]] && command=stop

if [[ $command == suspend || $command == hibernate ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    alpha compute instances suspend $name \
      --zone=$zone

elif [[ $command == resume ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    alpha compute instances resume $name \
      --zone=$zone

elif [[ $command == ssh ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    beta compute ssh $name \
      --zone=$zone

elif [[ $command == set-machine-type ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    compute instances set-machine-type $name \
      --zone=$zone \
      --custom-cpu=$customCPU \
      --custom-memory=$customMemory \
#      --machine-type=$machineType \

elif [[ $command == create-fresh ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    beta compute instances create $name \
      --zone=$zone \
      --machine-type=$machineType \
      --no-restart-on-failure \
      --maintenance-policy=TERMINATE \
      --preemptible \
      --image-family=$imageFamily \
      --image-project=$imageProject \
      --boot-disk-device-name=$name \
      --boot-disk-size=$diskSize \
      --boot-disk-type=$diskType \
      --no-boot-disk-auto-delete \
      --tags=$tags

elif [[ $command == create-disk-from-snapshot ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    compute disks create $disk --source-snapshot=$snapshot \
      --size=$diskSize \
      --type=$diskType \
      --zone=$zone

elif [[ $command == create-with-disk ]]; then

  # With help from https://digitalronin.github.io/2015/11/28/a-development-environment-in-the-cloud.html

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    compute instances create $name \
      --zone=$zone \
      --machine-type=$machineType \
      --no-restart-on-failure \
      --maintenance-policy=TERMINATE \
      --preemptible \
      --disk="name=$disk,device-name=$disk,mode=rw,boot=yes,auto-delete=no" \
      --tags=$tags

elif [[ $command == start || $command == stop ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    compute instances "$command" $name \
      --zone=$zone

elif [[ $command == status || $command == list ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    compute instances list

elif [[ $command == from-snapshot ]]; then

  set -x

  gcloud \
    --account=$account \
    --project=$project \
    compute disks create $name --size=$diskSize \
      --zone=$zone \
      --source-snapshot=$sourceSnapshot \
      --type=pd-ssd

  gcloud \
    --account=$account \
    --project=$project \
    beta compute instances create $name \
      --zone=$zone \
      --machine-type=$machineType \
      --no-restart-on-failure \
      --maintenance-policy=TERMINATE \
      --preemptible \
      --min-cpu-platform=Automatic \
      --disk="name=$name,device-name=$name,mode=rw,boot=yes,auto-delete=no" \
      --tags=$tags

elif [[ $command == allow-web ]]; then

  set -x

  gcloud \
    --account=$account \
    --project=$project \
    compute firewall-rules create default-allow-http \
      --network=default \
      --action=ALLOW --rules=tcp:80 \
      --source-ranges=0.0.0.0/0 \
      --target-tags=http-server

  gcloud \
    --account=$account \
    --project=$project \
    compute firewall-rules create default-allow-https \
      --network=default --action=ALLOW --rules=tcp:443 --source-ranges=0.0.0.0/0 \
      --target-tags=https-server

elif [[ $command == allow-dev-web ]]; then

  set -x
  gcloud \
    --account=$account \
    --project=$project \
    compute firewall-rules create allow-dev-web \
      --description='Allow development "web" ports: 3000, 8000-8001, 8080-8081' \
      --allow tcp:3000,tcp:8000-8001,tcp:8080-8081 \
      --source-ranges=0.0.0.0/0 \
      --target-tags=dev

else
  Usage
fi
