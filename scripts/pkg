#!/usr/bin/env bash

set -euo pipefail

script=$(basename "$0")

Usage() {
  cat >&2 <<!
usage: ${script} info|search|install|remove|upgrade|installed|files
!
  exit 2
}

[[ $# -eq -0 ]] && Usage

command=$1; shift

# Aliases.
[[ $command == show ]] && command=info
[[ $command == refresh ]] && command=update

function is_nix() {
  [[ -n $NIX_PROFILES ]]
}

function has_brew() {
  [[ -n ${HOMEBREW_PREFIX:-} ]] && echo Yes has Brew
}

if [[ $command = 'info' ]]; then
  if is_nix; then
    if [[ $# != 1 ]]; then
      echo "usage: ${script} info PKG" >&2
      exit 2
    fi
    pkg=$1
    nix-env --query --available --json --attr "${pkg}" | jq
  elif has_brew; then
    brew info "$@"
  else
    apt-cache show "$@"
  fi
elif [[ $command = 'search' ]]; then
  if is_nix; then
    nix search "$@"
  elif has_brew; then
    brew search "$@"
  else
    apt-cache search "$@"
  fi
elif [[ $command = 'install' ]]; then
  if is_nix; then
    nix-env --install --attr "$@"
  elif has_brew; then
    brew install "$@"
  else
    sudo apt-get install "$@"
  fi
elif [[ $command = 'remove' || $command = "uninstall" ]]; then
  if is_nix; then
    nix-env -e "$@"
  elif has_brew; then
    brew uninstall "$@"
  else
    sudo apt-get autoremove "$@"
  fi
elif [[ $command = 'update' ]]; then
  if is_nix; then
    if [[ $# != 1 && ${1:-} != system && ${1:-} != user ]]; then
      echo "usage: ${script} update [system|user]" >&2
      exit 2
    fi
    if [[ $1 == system ]]; then
      sudo nix-channel --update
    elif [[ $1 == user ]]; then
      nix-channel --update
    else
      echo "panic: the impossible happened!" >&2
      exit 1
    fi
  elif has_brew; then
    brew update "$@"
  else
    sudo apt-get update "$@"
  fi
elif [[ $command = 'upgrade' ]]; then
  if is_nix; then
    if [[ $# != 1 && ${1:-} != system && ${1:-} != user ]]; then
      echo "usage: ${script} upgrade [system|user]" >&2
      exit 2
    fi
    if [[ $1 == system ]]; then
      sudo nixos-rebuild switch --upgrade
    elif [[ $1 == user ]]; then
      nix-rebuild
    else
      echo "panic: the impossible happened!" >&2
      exit 1
    fi
  elif has_brew; then
    brew upgrade "$@"
  else
    sudo apt-get upgrade "$@"
  fi
elif [[ $command = 'installed' || $command = 'list' ]]; then
  if is_nix; then
    nix-env --query --installed "$@"
  elif has_brew; then
    brew list -1
  else
    dpkg --get-selections
  fi
elif [[ $command = 'files' ]]; then
  if is_nix; then
    if [[ $# != 1 ]]; then
      echo "usage: ${script} files PKG" >&2
      exit 2
    fi
    pkg=$1
    dir="$(
      nix-env --query --installed "${pkg}" "${pkg}" --out-path \
      | awk '{print $2}'
    )"
    tree "${dir}"
  elif has_brew; then
    echo "Not implemented" >&2
    exit 1
  else
    dpkg -L "$@"
  fi
elif [[ $command = 'which' ]]; then
  if is_nix; then
    echo "Not implemented for Nix" >&2
  elif has_brew; then
    echo "Not implemented for Homebrew" >&2
  else
    dpkg --search "$@"
  fi
else
  Usage
fi
